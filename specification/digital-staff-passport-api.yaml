openapi: 3.0.3
info:
  title: Digital Staff Passport API
  version: __VERSION__  # Automatically populated by `scripts/calculate_version.py` at release-time
  description: |
    ## Overview
    ![Digital Staff Passport API overview diagram](https://digital.nhs.uk/binaries/content/gallery/website/developer/api-catalogue/digital-staff-passport-api/digital-staff-passport-api-context-diagram-v2.svg)
    
    Use this API to notify [Digital Staff Passport (DSP)](https://digital.nhs.uk/services/digital-staff-passport) about changes to
    employee information in your workforce system.

    These 'event notifications' do not include any actual employee information, they just let DSP know that something has changed.

    To use this API, your system must also provide an API that conforms to the [Digital Staff Passport API standard](https://digital.nhs.uk/developer/api-catalogue/digital-staff-passport-api-standard).

    DSP will then use the [Get employee records](https://digital.nhs.uk/developer/api-catalogue/digital-staff-passport-api-standard#get-/organisations/-org-id-/employees/-employee-id-/records) operation
    on your API to retrieve the updated employee records.

    The API currently supports the following event types:

    | Event type          | Source                                   |
    | ------------------- | ---------------------------------------- |
    | DBS check completed | Recruitment system / DBS registered body |
    | eLearning completed | Learning management system               |
 
    For more context, see [Integrating with the Digital Staff Passport](https://digital.nhs.uk/services/digital-staff-passport/integration), specifically:
    - [integration pattern 2](https://digital.nhs.uk/services/digital-staff-passport/integration#pattern-2-outbound-via-online-portal)

    ## Who can use this API
    You can only use this API if you are integrating your system with Digital Staff Passport.

    ## Status
    This API is [in development](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses),
    meaning it is not yet available for production use, and might be subject to breaking changes.

    ## Service level
    This API is a bronze service, meaning it is operational and supported during business hours.

    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).
    
    ## Technology
    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#basic-rest).

    It does not conform to the [FHIR](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#fhir)
    global standard for health care data exchance because it is not a clinical API, it relates to workforce.
    This has been agreed with the [HL7 FHIR UK Board](https://www.hl7.org.uk/register/about-hl7-uk/management-board-members/).

    ## Network access
    This API is available on the internet and also indirectly via HSCN.

    For more details, see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).
    
    ## Security and authorisation
    This API is [application-restricted](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation#application-restricted-apis),
    meaning we authenticate the calling application but not the end user.

    To use this API, use the following security pattern:
    - [application-restricted RESTful API - API key authentication](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/application-restricted-restful-apis-api-key-authentication)
    
    ## Errors
    We use standard HTTP status codes to show whether an API request succeeded or not. They are usually in the range:

    * 200 to 299 if it succeeded
    * 400 to 499 if it failed because of a client error by your application
    * 500 to 599 if it failed because of an error on our server
    
    For details of specific errors, see the 'Response' section for each operation. See our [reference guide](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#http-status-codes) for more on errors.

    Your API-calling application should have a mechanism to automatically try again, for example by giving status information to your end user, before giving up. See our [reference guide](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#error-handling) for more information about error handling.

    ## Environments and testing

    | Environment       | Base URL                                                               |
    | ----------------- | ---------------------------------------------------------------------- |
    | Sandbox           | Not yet available    |
    | Integration test  | Not yet available    |
    | Production        | Not yet available    |

    ### Sandbox testing
    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):
    * is for early developer testing
    * only covers a limited set of scenarios
    * is stateless, so does not actually persist any updates
    * is open access, so does not allow you to test authorisation

    ### Integration testing
    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):
    * is for formal integration testing
    * is stateful, so persists updates
    * includes authorisation

    For more details, see [Digital Staff Passport integration testing](https://digital.nhs.uk/services/digital-staff-passport/integration/testing).

    ## Onboarding
    Before your integration goes live, weâ€™ll need to complete a number of assurance checks for both your organisation and your system. We call this onboarding.

    This includes, for example, making sure we have processes in place to deal with live incidents.

    For more details, see [Digital Staff Passport onboarding and assurance](https://digital.nhs.uk/services/digital-staff-passport/integration/onboarding-and-assurance).
    
  contact:
    name: API Management Support
    email: api.management@nhs.net
    url: 'https://digital.nhs.uk/developer/help-and-support'
x-spec-publication:
  try-this-api:
    disabled: true
paths:
  /events:
    post:
      operationId: publish-event
      summary: Publish an event
      description: |
        Use this operation to notify DSP about a change to employee information in your workforce system.

        The following event types are supported:

        | Event type                 | Event type ID                  | Source                                   |
        | -------------------------- | ------------------------------ | ---------------------------------------- |
        | DBS check completed        | `employee-dbs-check-completed` | Recruitment system / DBS registered body |
        | eLearning course completed | `employee-elearning-completed` | Learning management system               |
        
      parameters:
        - $ref: '#/components/parameters/ApiKey'
      requestBody:
        required: true
        content:
          application/cloudevents+json:
            schema:
              $ref: '#/components/schemas/Event'
            example:
              $ref: 'components/examples/api/PublishEventRequest.json'
      responses:
        '200':
          description: Success - the event has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
              example:
                $ref: components/examples/api/PublishEventResponse.json
        '4XX':
          description: |
            An error occurred as follows:

            | HTTP status | Error code          | Description |
            | ----------- | ------------------- | - |
            | 400         | invalid             | Invalid data in request body, for example, missing mandatory field or invalid date/time format. |
            | 401         | invalid-credentials | Missing or invalid API key. |

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                $ref: components/examples/api/PublishEventResponseError.json              
components:
  parameters:
    ApiKey:
      in: header
      name: apikey
      description: |
        The calling system's API key.
        For details, see [Application-restricted RESTful API - API key authentication](https://digital.nhs.uk/developer/guides-and-documentation/security-and-authorisation/application-restricted-restful-apis-api-key-authentication).
      required: true
      schema:
        type: string
        example: '9Y8Y1CcNxFlsZjGSBdJmExfZcjGkGOac'
    BearerAuthorization:
      in: header
      name: Authorization
      description: |
        The calling system's access token, which must be an OAuth 2.0 bearer token.
        For details, see [Authorisation using OAuth 2.0 private key JWT](https://digital.nhs.uk/developer/api-catalogue/digital-staff-passport-api-standard/authorisation-using-oauth-2.0-private-key-jwt).
      required: true
      schema:
        type: string
        format: '^Bearer\ [[:ascii:]]+$'
        example: 'Bearer g1112R_ccQ1Ebbb4gtHBP1aaaNM'
    OrganisationId:
      in: path
      name: org-id
      description: The ODS code for the employing organisation.
      required: true
      example: 'RHQ'
      schema:
        type: string
    EmployeeId:
      in: path
      name: employee-id
      description: The employee's primary unique identifier, as used by the external system.
      required: true
      example: '12345'
      schema:
        type: string
  schemas:
    Event:
      type: object
      required:
        - specversion
        - id
        - source
        - type
        - time
        - subject
        - filtering
        - dataref
      properties:
        specversion:
          description: The version of the [CloudEvents](https://cloudevents.io/) specification which the event uses.
          type: string
          enum:
            - '1.0'
          example: 1.0
        id:
          description: A unique identifier for the event â€“ a GUID.
          type: string
          example: 236a1d4a-5d69-4fa9-9c7f-e72bf505aa5b
        source:
          description: The system that produced the event, expressed as a URI.
          type: string
          format: uri-reference
          example: com.example-organisation.example-workforce-system
        type:
          description: The type of event.
          type: string
          enum:
            -  employee-dbs-check-completed
            -  employee-elearning-completed
          example: employee-dbs-check-completed
        time:
          description: Timestamp for when the event occurred, formatted as per [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339).
          type: string
          format: date-time
          example: 2020-06-01T13:00:00Z
        subject:
          description: |
            The system-specific unique identifier for the employee who is the subject of the event.
            This is the same as the `employee-id` field used in the [Digital Staff Passport API standard](https://digital.nhs.uk/developer/api-catalogue/digital-staff-passport-api-standard).
          type: string
          example: 12345
        filtering:
          description: List of filter criteria.
          type: object
          required:
            - organisation
          properties:
            organisation:
              description: ODS code for the employing organisation.
              type: string
              example: RHQ
        dataref:
          description: |
            URL for the endpoint on the publishing service that can be used to retrieve the full information about the event or subject record.

            Must be an implementation of the [Get employee records operation](https://digital.nhs.uk/developer/api-catalogue/digital-staff-passport-api-standard#get-/organisations/-org-id-/employees/-employee-id-/records)
            from the Digital Staff Passport API standard.

            The `employee-id` field in the URI must match the `subject` field for the event.

            The `org-id` field in the URI must match the `filtering.organisation` field for the event.
          type: string
          format: uri
          example: https://api.example-workforce-system.example-organisation.com/dsp-api/organisations/RHQ/employees/12345/records
    EventResponse:
      type: object
      required:
        - id
      properties:
        id:
          description: The unique identifier for the event, as supplied in the request.
          type: string
          example: 236a1d4a-5d69-4fa9-9c7f-e72bf505aa5b
    Error:
      type: object
      required:
        - resourceType
        - issue
      properties:
        resourceType:
          description: The resource type.
          type: string
          enum:
            - OperationOutcome
        issue:
          description: List of issues that have occurred. Usually there will be just one.
          type: array
          minItems: 1
          items:
            type: object
            required:
              - severity
              - code
            properties:
              severity:
                description: Issue severity, as per [https://hl7.org/fhir/R4/valueset-issue-severity.html](https://hl7.org/fhir/R4/valueset-issue-severity.html).
                type: string
                enum:
                  - fatal
                  - error
                  - warning
                  - information
              code:
                description: Error or warning code, as per [https://hl7.org/fhir/R4/valueset-issue-type.html](https://hl7.org/fhir/R4/valueset-issue-type.html).
                type: string
                example: 'invalid'
              details:
                description: Additional details about the error or warning.
                type: object
                required:
                  - text
                properties:
                  text:
                    description: A text description of the error or warning.
                    type: string
                    example: 'Invalid format for time query parameter - must be as per RFC 3339.'
