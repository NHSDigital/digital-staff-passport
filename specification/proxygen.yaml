openapi: 3.0.3
x-stoplight:
  id: 5afmfye727016
info:
  title: Proxygen API
  version: __VERSION__
  description: |
    <div class="nhsd-m-emphasis-box nhsd-m-emphasis-box--emphasis nhsd-!t-margin-bottom-6" aria-label="Highlighted Information">
        <div class="nhsd-a-box nhsd-a-box--border-blue">
            <div class="nhsd-m-emphasis-box__image-box">
                <figure class="nhsd-a-image">
                    <picture class="nhsd-a-image__picture">
                        <img src="http://digital.nhs.uk/binaries/content/gallery/icons/info.svg?colour=231f20" alt="" style="object-fit:fill">
                    </picture>
                </figure>
            </div>
            <div class="nhsd-m-emphasis-box__content-box">
                <div data-uipath="website.contentblock.emphasis.content" class="nhsd-t-word-break"><p class="nhsd-t-body">This API is <a href="https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses">in production, beta but internal</a>, meaning the API is not currently available for integration by external third parties. If you want to use it, <a href="https://digital.nhs.uk/developer/help-and-support">contact us</a> and we'll look at making it available.</p></div>            
            </div>
        </div>
    </div>

    ## Overview
    Use this API to create and manage resources on NHS England's API Management platform.
    This API is intended for NHS England internal product teams to make services available over the internet.

    You can:
    * Do a thing..
    * And another thing..

    In the future, you will be able to:
    * Do this thing

    ## Who can use this API
    This API is currently for internal NHS England use only.

    ## Related APIs
    Can/should we remove this section?

    ## API status and roadmap
    This API is in [production, beta but internal](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#statuses), meaning:
    * we might make breaking changes, but only if we cannot avoid it, and we will give advance notice
    * it is only available for internal NHS England users

    ## Service level
    This API is a bronze service, meaning it is operational and supported only during business hours (8am to 6pm), Monday to Friday excluding bank holidays.
    For more details, see [service levels](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#service-levels).

    ## Technology
    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#basic-rest-apis).

    ## Network access
    This API is available on the internet and, indirectly, on the [Health and Social Care Network (HSCN)](https://digital.nhs.uk/services/health-and-social-care-network).
    For more details see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).

    ## Security and authorisation
    Todo

    ## Environments and testing

    | Environment       | Base URL                                                               |
    | ----------------- | ---------------------------------------------------------------------- |
    | Development       | `https://proxygen.ptl.api.platform.nhs.uk`                             |
    | Production        | `https://proxygen.prod.api.platform.nhs.uk`                            |


    ### Development environment
    Our development environment:
    * is for developers of the Proxygen service itself
    * is not intended for [integration testing](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing)

    ## Onboarding
    This API is for internal NHS England users only. There is no onboarding process for external parties.
    The 'Getting started as an API Producer' section of the API Management NHS England Platforms Confluence space provides instructions on how to engage with us and start using Proxygen.

    ## Errors
    We use standard HTTP status codes to show whether an API request succeeded or not. They are usually in the range:

    * 200 to 299 if it succeeded, including code 202 if it was accepted by an API that needs to wait for further action
    * 400 to 499 if it failed because of a client error by your application
    * 500 to 599 if it failed because of an error on our server

    Errors specific to each API are shown in the Endpoints section, under Response. See our [reference guide](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#http-status-codes) for more on errors.
  license:
    name: MIT
  contact:
    name: API Management Support
    email: api.management@nhs.net
x-spec-publication:
  operation-order: null
  try-this-api:
    disabled: true
servers:
  - url: 'https://proxygen.prod.api.platform.nhs.uk'
    description: Production environment.
  - url: 'https://proxygen.ptl.api.platform.nhs.uk'
    description: Development environment.
tags:
  - name: Instances
    description: Endpoints to manage instances of your API
  - name: Secrets
    description: Endpoints to manage sensitive information (secrets) such as API keys
  - name: Container Registry
    description: Get access details to use the Elastic Container Registry associated with your API
  - name: Specifications
    description: Endpoints to manage
paths:
  /apis:
    get:
      summary: Get list of APIs deployed through proxygen.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  x-stoplight:
                    id: czqc9ud5zh6w2
                  type: string
                  example: hello-world
              examples: {}
      operationId: get-apis
    post:
      summary: Create pre-requisite resources for your API.
      operationId: post-apis
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
  '/apis/{api_name}':
    parameters:
      - schema:
          type: string
          example: hello-world
        name: api_name
        in: path
        required: true
    get:
      summary: Get an APIs deployed resources (secrets and instances)
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resource'
              examples:
                Example 1:
                  value:
                    - type: instance
                      environment: internal-dev
                      name: hello-world-test-123
                    - type: secret
                      environment: internal-dev
                      name: my-secret
      operationId: get-apis-api_name
    put:
      summary: Update pre-requisite resources for your API.
      operationId: put-apis-api_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPException'
              examples:
                Example 1:
                  value:
                    detail: Path parameter api_name='hello-world' does match request body 'something-else'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
    delete:
      summary: Delete the pre-requisite resources for an API with no deployed resources
      operationId: delete-apis-api_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPException'
              examples:
                Example 1:
                  value:
                    detail: Cannot delete API with deployed resources.
  '/apis/{api_name}/docker-token':
    parameters:
      - schema:
          type: string
        name: api_name
        in: path
        required: true
    get:
      summary: Get an access token for our ECR
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    x-stoplight:
                      id: forp1q8wiguxs
                  password:
                    type: string
                    x-stoplight:
                      id: ht21mlieiimi4
                  registry:
                    type: string
                    x-stoplight:
                      id: x6hwwqx6rduew
                  expiresAt:
                    type: string
                    x-stoplight:
                      id: 41lllyfqnem8l
                    format: date-time
              examples:
                Example 1:
                  value:
                    user: AWS
                    password: '**********************'
                    registry: 'https://958002497996.dkr.ecr.eu-west-2.amazonaws.com'
                    expiresAt: '2022-10-26T02:05:39.540000+01:00'
      operationId: get-apis-api_name-docker-token
  '/apis/{api_name}/spec':
    parameters:
      - schema:
          type: string
        name: api_name
        in: path
        required: true
    get:
      summary: Get an API's spec
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/proxygen-oas.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPException'
              examples:
                Example 1:
                  value:
                    detail: Not found
      operationId: get-apis-api_name-spec
      requestBody:
        content: {}
    put:
      summary: Create or replace an API's spec
      operationId: put-apis-api_name-spec
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/proxygen-oas.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/proxygen-oas.yaml
    delete:
      summary: Delete an API's spec
      operationId: delete-apis-api_name-spec
      responses:
        '204':
          description: No Content
  '/apis/{api_name}/environments':
    parameters:
      - schema:
          type: string
        name: api_name
        in: path
        required: true
    get:
      summary: Get everything deployed in environments for an API
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resource'
              examples:
                Example 1:
                  value:
                    - type: instance
                      environment: internal-dev
                      name: hello-world-example-123
                    - type: secret
                      environment: internal-dev
                      name: my-secret-name
      operationId: get-apis-api_name-environments
      parameters:
        - schema:
            type: string
            enum:
              - instance
              - secret
          in: query
          name: _type
  '/apis/{api_name}/environments/{environment}':
    parameters:
      - schema:
          type: string
        name: api_name
        in: path
        required: true
      - schema:
          type: string
        name: environment
        in: path
        required: true
    get:
      summary: Get an API's resources deployed to a specific environment
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resource'
      operationId: get-apis-api_name-environments-environment
  '/apis/{api_name}/environments/{environment}/secrets':
    parameters:
      - schema:
          type: string
        name: api_name
        in: path
        required: true
      - schema:
          type: string
        name: environment
        in: path
        required: true
    get:
      summary: Get the secrets for an API in a specific environment
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resource'
              examples:
                Example 1:
                  value:
                    - type: secret
                      environment: internal-dev
                      name: my-secret
                    - type: secret
                      environment: internal-dev
                      name: another-secret
      operationId: get-apis-api_name-environments-environment-secrets
  '/apis/{api_name}/environments/{environment}/secrets/{secret_name}':
    parameters:
      - schema:
          type: string
        name: api_name
        in: path
        required: true
      - schema:
          type: string
        name: environment
        in: path
        required: true
      - schema:
          type: string
        name: secret_name
        in: path
        required: true
    put:
      summary: Create or update a secret or API key
      operationId: put-apis-api_name-environments-environment-secrets-secret_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretDescription'
              examples:
                Example 1:
                  value:
                    name: my-secret
                    type: secret
                    last_modified: '2019-08-24T14:15:22Z'
                    environment: internal-dev
                    apikey: false
                    version_id: 9e94c502-ca41-4342-a7f7-af96b444512c
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPException'
              examples:
                Example 1:
                  value:
                    detail: Request body cannot be empty
      requestBody:
        content:
          text/plain:
            schema:
              type: string
              minLength: 1
      parameters:
        - schema:
            type: string
            enum:
              - apikey
          in: query
          name: _type
    delete:
      summary: Delete a secret or API key
      operationId: delete-apis-api_name-environments-environment-secrets-secret_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretDescription'
  '/apis/{api_name}/environments/{environment}/instances':
    parameters:
      - schema:
          type: string
        name: api_name
        in: path
        required: true
      - schema:
          type: string
        name: environment
        in: path
        required: true
    get:
      summary: Get an API's instances for a specific environment
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resource'
              examples:
                Example 1:
                  value:
                    - type: instance
                      environment: internal-dev
                      name: hello-world-instance-1
                    - type: instance
                      environment: internal-dev
                      name: hello-world-instance-2
      operationId: get-apis-api_name-environments-environment-instances
    post:
      summary: Create an API instance in a specific environment
      operationId: post-apis-api_name-environments-environment-instances
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./components/schemas/proxygen-oas.yaml
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPException'
              examples:
                Example 1:
                  value:
                    detail: API hello-world already has an instance hello-world-123 in internal-dev
      description: The instance name to be created is determined by base path of the server url
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/proxygen-oas.yaml
  '/apis/{api_name}/environments/{environment}/instances/{instance_name}':
    parameters:
      - schema:
          type: string
        name: api_name
        in: path
        required: true
      - schema:
          type: string
        name: environment
        in: path
        required: true
      - schema:
          type: string
        name: instance_name
        in: path
        required: true
    get:
      summary: Get a specific API instance
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/proxygen-oas.yaml
      operationId: get-apis-api_name-environments-environment-instances-instance_name
    put:
      summary: Update or create an API instance
      operationId: put-apis-api_name-environments-environment-instances-instance_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/proxygen-oas.yaml
      description: The instance name supplied in the path parameter must match the one derived from the server.url
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/proxygen-oas.yaml
    delete:
      summary: Delete a specific API instance
      operationId: delete-apis-api_name-environments-environment-instances-instance_name
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPException'
              examples:
                Example 1:
                  value:
                    detail: No instance hello-world-123 in environment internal-dev
components:
  schemas:
    Api:
      title: Api
      x-stoplight:
        id: 22epkg5dn1n4i
      type: object
      properties:
        name:
          type: string
          x-stoplight:
            id: pxwx9zyxs70bt
        api_registry_entry:
          type: boolean
          x-stoplight:
            id: 28p38eengd4nt
          default: true
        keycloak:
          type: boolean
          x-stoplight:
            id: hrfz8co0zx2hk
          default: true
        keycloak_client_jwks_resource_url:
          type: string
          x-stoplight:
            id: kf36w9gb2almn
        docker_repositories:
          type: array
          x-stoplight:
            id: rvfee23slxasw
          uniqueItems: true
          description: "Defaults to one repository with the same name as the API name.\r\n\r\nNames must be the same as, or start with, the API name.\r\n\r\nSend an empty list to have no repositories."
          items:
            x-stoplight:
              id: 6ngo7ect633ap
            type: string
            example: hello-world
      required:
        - name
    HTTPException:
      title: HTTPException
      x-stoplight:
        id: 05zxsf8mvhelt
      type: object
      properties:
        detail:
          type: string
          x-stoplight:
            id: sfydvha3l5d1l
    LITERAL_ENVS:
      title: LITERAL_ENVS
      x-stoplight:
        id: 7vi5nbx7d4k86
      enum:
        - internal-dev
        - internal-dev-sandbox
        - internal-qa
        - internal-qa-sandbox
        - ref
        - dev
        - int
        - sandbox
        - prod
      description: ''
    resource:
      title: resource
      x-stoplight:
        id: w659uo1fiw2ov
      type: object
      properties:
        type:
          x-stoplight:
            id: w9gtothqjl0e4
          enum:
            - instance
            - secret
        environment:
          $ref: '#/components/schemas/LITERAL_ENVS'
        name:
          type: string
          x-stoplight:
            id: zrqqkjh420he7
      x-examples:
        Example 1:
          type: instance
          environment: internal-dev
          name: hello-world-test-123
        Example 2:
          type: secret
          environment: internal-dev
          name: my-secret-name
    SecretDescription:
      title: SecretDescription
      x-stoplight:
        id: fgmmgr9gcmwv7
      type: object
      properties:
        name:
          type: string
          x-stoplight:
            id: 40einl4h7evfx
        type:
          x-stoplight:
            id: b11hfw3p25ytx
          enum:
            - secret
        last_modified:
          type: string
          x-stoplight:
            id: 6bx9k11045gg3
          format: date-time
        environment:
          $ref: '#/components/schemas/LITERAL_ENVS'
        apikey:
          type: boolean
          x-stoplight:
            id: cmcwlm3z52a1e
        version_id:
          type: string
          x-stoplight:
            id: jg89l4h38m6i4
          format: uuid
      required:
        - name
        - type
        - last_modified
        - environment
        - apikey
        - version_id
